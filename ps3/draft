zhtta: a higher performance web server

===skeleton draft===

goal
* lower average response time
* enlarge server capacity

approach
* buffer
* priority scheduling (SPRT ...)

Problem 1: mutex for safe counter


Problem 2: study several scheduling methods (round-robin, FIFO, LIFO, SPRT ...), and design your preferred connection scheduling policy.


Problem 3: [code work] implement your preferred scheduling in zhtta (in user space but not kernel)


Problem 4: [code work] integrate gash in zhtta, how would you schedule the connection to gash?


Problem 5: [code work] reduce the memory footprint when serving large file downloading (actually, I guess students will have realized this problem when solving problem 3. so it may be removed safely.)


Problem 6: [use the provided test tool]test and compare zhttpta with zhttpto, any performance improvement?
"C10k problem"
Web Server Performance Comparison: http://wiki.dreamhost.com/Web_Server_Performance_Comparison
ab - Apache HTTP server benchmarking tool

Problem 7: [not good] Mordern solution for serving static files (non-blocking evented I/O (e.g. Tornado)? CDN? what else?)
non-blocking, asynchronous, event driven I/O



Reference: 
[  ] Bianca Schroeder, Mor Harchol-Balter (CMU). Web servers under overload: How scheduling can help
[31] Mor Harchol-Balter, et al (CMU). Size-based scheduling to improve web performance. ACM Transactions on Computer Systems, 21(2), May 2003.
[54] Mayank Rawat, et al (UIC). SWIFT: Scheduling in web servers for fast reponse time. In Second IEEE International Symposium on Network Computing and Applications, April 2003.

